import pandas as pd
import numpy as np
import sklearn

from sklearn.datasets import load_boston
df= load_boston()

df.keys()

print (df.DESCR)

boston = pd.DataFrame(df.data, columns=df.feature_names)
boston.head()

boston['MEDV'] = df.target
boston.head()

boston.isnull()

boston.isnull().sum()

from sklearn.model_selection import train_test_split
X = boston.drop('MEDV', axis=1)
Y = boston['MEDV']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.15, random_state=5)
print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

Lin_model = LinearRegression()
Lin_model.fit(X_train, Y_train)

Y_train_predict = Lin_model.predict(X_train)
RMSE = (np.sqrt(mean_squared_error(Y_train, Y_train_predict)))
print("The model performance(Training set) =")
print("RMSE is {}".format(RMSE))
print("\n")

Y_test_predict = Lin_model.predict(X_test)
RMSE = (np.sqrt(mean_squared_error(Y_test, Y_test_predict)))
print("The model performance(Training set) is")
print("RMSE = {}".format(RMSE))
print("\n")


